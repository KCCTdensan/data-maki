/* tslint:disable */
/* eslint-disable */
export const memory: WebAssembly.Memory;
export function __wbg_general_free(a: number, b: number): void;
export function __wbg_get_general_patterns(a: number, b: number): void;
export function __wbg_set_general_patterns(a: number, b: number, c: number): void;
export function __wbg_problem_free(a: number, b: number): void;
export function __wbg_get_problem_general(a: number): number;
export function __wbg_set_problem_general(a: number, b: number): void;
export function __wbg_get_problem_board(a: number): number;
export function __wbg_set_problem_board(a: number, b: number): void;
export function __wbg_pattern_free(a: number, b: number): void;
export function __wbg_get_pattern_height(a: number): number;
export function __wbg_set_pattern_height(a: number, b: number): void;
export function __wbg_get_pattern_p(a: number): number;
export function __wbg_set_pattern_p(a: number, b: number): void;
export function __wbg_board_free(a: number, b: number): void;
export function __wbg_get_board_goal(a: number, b: number): void;
export function __wbg_set_board_goal(a: number, b: number, c: number): void;
export function __wbg_get_board_start(a: number, b: number): void;
export function __wbg_set_board_start(a: number, b: number, c: number): void;
export function __wbg_get_board_width(a: number): number;
export function __wbg_set_board_width(a: number, b: number): void;
export function __wbg_get_board_height(a: number): number;
export function __wbg_set_board_height(a: number, b: number): void;
export function __wbg_answer_free(a: number, b: number): void;
export function __wbg_get_answer_ops(a: number, b: number): void;
export function __wbg_set_answer_ops(a: number, b: number, c: number): void;
export function __wbg_get_answer_n(a: number): number;
export function __wbg_set_answer_n(a: number, b: number): void;
export function __wbg_op_free(a: number, b: number): void;
export function __wbg_get_op_p(a: number): number;
export function __wbg_set_op_p(a: number, b: number): void;
export function __wbg_get_op_y(a: number): number;
export function __wbg_set_op_y(a: number, b: number): void;
export function __wbg_get_op_x(a: number): number;
export function __wbg_set_op_x(a: number, b: number): void;
export function __wbg_get_op_s(a: number): number;
export function __wbg_set_op_s(a: number, b: number): void;
export function __wbg_set_pattern_width(a: number, b: number): void;
export function __wbg_set_general_n(a: number, b: number): void;
export function __wbg_get_pattern_cells(a: number, b: number): void;
export function __wbg_get_pattern_width(a: number): number;
export function __wbg_get_general_n(a: number): number;
export function __wbg_set_pattern_cells(a: number, b: number, c: number): void;
export function __wbg_answerset_free(a: number, b: number): void;
export function __wbg_get_answerset_answer(a: number): number;
export function __wbg_set_answerset_answer(a: number, b: number): void;
export function __wbg_get_answerset_board(a: number, b: number): void;
export function __wbg_set_answerset_board(a: number, b: number, c: number): void;
export function solve(a: number, b: number): number;
export function __wbg_reverseoperationpatterns_free(a: number, b: number): void;
export function __wbg_get_reverseoperationpatterns_has_reverse90(a: number): number;
export function __wbg_set_reverseoperationpatterns_has_reverse90(a: number, b: number): void;
export function __wbg_get_reverseoperationpatterns_has_reverse_up_down(a: number): number;
export function __wbg_set_reverseoperationpatterns_has_reverse_up_down(a: number, b: number): void;
export function __wbg_get_reverseoperationpatterns_has_reverse_left_right(a: number): number;
export function __wbg_set_reverseoperationpatterns_has_reverse_left_right(a: number, b: number): void;
export function __wbindgen_malloc(a: number, b: number): number;
export function __wbindgen_realloc(a: number, b: number, c: number, d: number): number;
export function __wbindgen_add_to_stack_pointer(a: number): number;
export function __wbindgen_free(a: number, b: number, c: number): void;
